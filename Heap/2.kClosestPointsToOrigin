https://leetcode.com/problems/k-closest-points-to-origin/description/

class Solution {
    public int[][] kClosest(int[][] points, int k) {
        PriorityQueue<int[]> pq = new PriorityQueue<>((a,b) -> b[0]-a[0]);
        for(int i=0;i<points.length;i++){
            int[] cord = points[i];
            int x = cord[0];
            int y = cord[1];
            int dis = (x*x) + (y*y);
            pq.add(new int[] {dis,x,y});
            if(pq.size()>k){
                pq.poll();
            }
        }
        int[][] res = new int[k][2];
        for(int i=0;i<res.length;i++){
            int[] triplet = pq.poll();
            res[i][0] = triplet[1];
            res[i][1] = triplet[2];
        }
        return res;
    }
}